<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shirley</title>
  <subtitle>一只自学成菜的仙女!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-16T05:50:34.771Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ShirleyLi</name>
    <email>1363814017@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NTFS文件系统介绍</title>
    <link href="http://yoursite.com/2017/10/16/NTFS-file-system/"/>
    <id>http://yoursite.com/2017/10/16/NTFS-file-system/</id>
    <published>2017-10-16T02:49:05.000Z</published>
    <updated>2017-10-16T05:50:34.771Z</updated>
    
    <content type="html"><![CDATA[<p>【转】Windows文件系统FAT16、FAT32、NTFS的简单介绍。<br><a id="more"></a></p>
<h1 id="什么是NTFS文件系统"><a href="#什么是NTFS文件系统" class="headerlink" title="什么是NTFS文件系统"></a>什么是NTFS文件系统</h1><p>介绍NTFS之前，先来介绍一下FAT。</p>
<p>FAT(File Allocation Table)表示“文件分配表”，它的意义在于对硬盘分区的管理。FAT16、FAT32、NTFS是Windows系统最常见的三种文件系统。   </p>
<p>FAT16：以前用的DOS、Windows95都使用FAT16文件系统，后来的Windows98/2000/XP等系统均支持FAT16文件系统。它最大可以管理大到2GB的分区，但每个分区最多只能有65525个簇（簇是磁盘空间的配置单位，即文件的存取的最小单位，一个簇包含若干扇区，而扇区是磁盘驱动器向磁盘读取和写入数据的最小单位）。随着硬盘或分区容量的增大，每个簇所占的空间将越来越大，从而导致硬盘空间的浪费。 更多关于硬盘的基本知识参见博客<a href="http://blog.csdn.net/fyfcauc/article/details/39576065" target="_blank" rel="external">硬盘基本知识</a>。</p>
<p>FAT32：随着大容量硬盘的出现，从Windows98开始，FAT32开始流行。它是FAT16的增强版本，可以支持大到2TB（2048GB)的分区。FAT32使用的簇比FAT16小，从而有效地节约了硬盘空间。</p>
<p>NTFS：微软Windows NT内核的系列操作系统支持的、一个特别为网络和磁盘配额、文件加密等管理安全特性设计的磁盘格式。从1993年开始，随着以NT为内核的Windows 2000/XP的普及，很多个人用户开始用到了NTFS。NTFS也是以簇为单位来存储数据文件，但NTFS中簇的大小并不依赖于磁盘或分区的大小。簇尺寸的缩小不但降低了磁盘空间的浪费，还减少了产生磁盘碎片的可能。NTFS支持文件加密管理功能，可为用户提供更高层次的安全保证。</p>
<p>在NTFS文件系统中，文件存取是按簇进行分配，一个簇必需是物理扇区的整数倍，而且总是2的整数次方倍。NTFS文件系统并不去关心什么是扇区，也不会去关心扇区到底有多大（如是不是512字节）。簇大小在使用格式化程序时则会由格式化程序根据卷大小自动的进行分配。 </p>
<p>文件通过主文件表（MFT）来确定其在磁盘上的存储位置。主文件表是一个对应的数据库，由一系列的文件记录组成。 卷中每一个文件都有一个文件记录（对于大型文件还可能有多个记录与之相对应）。主文件表本身也有它自己的文件记录。</p>
<p>NTFS卷上的每个文件都有一个64 bit称为文件引用号（File Reference Number，也称文件索引号）的唯一标识。文件引用号由两部分组成：一是文件号，二是文件顺序号。文件号为48位，对应于该文件在MFT中的位置。文件顺序号随着每次文件记录的重用而增加，这是为NTFS进行内部一致性检查而设计的。</p>
<p>NTFS使用逻辑簇号（Logical Cluster Number，LCN）和虚拟簇号（Virtual Cluster Number，VCN）来进行簇的定位。LCN是对整个卷中所有的簇从头到尾所进行的简单编号。卷因子乘以LCN，NTFS就能够得到卷上的物理字节偏移量，从而得到物理磁盘地址。VCN则是对属于特定文件的簇从头到尾进行编号，以便于引用文件中的数据。VCN可以映射成LCN，而不必要求在物理上连续。</p>
<p>NTFS的目录只是一个简单的文件名和文件引用号的索引，如果目录的属性列表小于一个记录的长度，那么该目录的所有信息都存储在主文件表的记录中，对于大于记录的目录则使用B+树进行管理。</p>
<p>主文件表中的基本文件记录中有一个指针指向一个存储非常驻索引缓冲–包括该目录下所有下一级子目录和文件的外部簇，而B+树结构便于大型目录中文件和子目录的快速查找。</p>
<p>在NTFS中，所有存储在卷上的数据都包含在文件中，包括用来定位和获取文件的数据结构，以及引导程序和记录这个卷的记录（NTFS元数据）的位图，这体现了NTFS的原则：磁盘上的任何事物都为文件。在文件中存储一切使得文件系统很容易定位和维护数据，而在NTFS中，卷中所有存放的数据均在一个叫做MFT的文件记录数组中，称为主文件表(Master File Table)，MFT是由高级格式化产生的。而MFT则由文件记录(File Record)数组构成。File Record的大小一般是固定的，不管簇的大小是多少，均为1KB，这个概念相当于Linux中的inode（i节点）。File Record在MFT文件记录数组中物理上是连续的，且从0开始编号。</p>
<p>MFT仅供系统本身组织、架构文件系统使用，这在NTFS中称为元数据(metadata)。其中最基本的前16个记录是操作系统使用的非常重要的元数据文件。这些NTFS主文件表的重要的元数据文件都是以$(美元符号)开始的名字，所以是隐藏文件，在Windows 2000中不能使用dir命令(甚至加上/ah参数)像普通文件一样列出这些元数据文件。实际上File System Driver(ntfs.sys)维护了一个系统变量NTFS Protect System Files用于隐藏这些元数据。但是微软公司也提供了一个OEM TOOL,叫做NFI.EXE,用此工具可以转储NTFS主文件表的重要的元数据文件（元数据：是存储在卷上支持文件系统格式管理的数据。它不能被应用程序来访问，它只能为系统提供服务）。这些元数据文件文件是系统驱动程序装配卷所必需的，WINDOWS 2000给每个分区赋予一个盘符并不表示该分区包含有WINDOWS 2000可以识别的文件系统格式，如果一旦主文件表损坏，那么该分区在WINDOWS 2000下是无法读取的。为了使该分区能够在WINDOWS 2000下能被识别，也就是必须首先建立WINDOWS 2000可以识别的文件系统格式即主文件表，这可通过高级格式化该分区来完成。众所周知，Windows以簇号来定位文件在磁盘存储的位置，在FAT格式的文件系统中有关簇号的指针是包含在FAT表中的，而在NTFS中有关簇号的指针是包含在$MFT及$MFTMirr文件中的。 </p>
<h2 id="NTFS元文件"><a href="#NTFS元文件" class="headerlink" title="NTFS元文件"></a>NTFS元文件</h2><p>MFT中的第1个记录就是MFT自身。由于MFT文件本身的重要性，为了确保文件系统结构的可靠性，系统专门为它准备了一个镜像文件（＄MftMirr），也就是MFT中的第2个记录。 </p>
<p>第3个记录是日志文件（＄LogFile）。该文件是NTFS为实现可恢复性和安全性而设计的。当系统运行时，NTFS就会在日志文件中记录所有影响NTFS卷结构的操作，包括文件的创建和改变目录结构的命令，例如复制，从而在系统失败时能够恢复NTFS卷。 </p>
<p>第4个记录是卷文件（＄Volume），它包含了卷名、被格式化的卷的NTFS版本和一个标明该磁盘是否损坏的标志位（NTFS系统以此决定是否需要调用Chkdsk程序来进行修复）。 </p>
<p>第5个记录是属性定义表（＄AttrDef，attribute definition table），其中存放了卷所支持的所有文件属性，并指出它们是否可以被索引和恢复等。 </p>
<p>第6个记录是根目录（\），其中保存了存放于该卷根目录下所有文件和目录的索引。在访问了一个文件后，NTFS就保留该文件的MFT引用，第二次就能够直接进行对该文件的访问。 </p>
<p>第7个记录是位图文件（＄Bitmap）。NTFS卷的分配状态都存放在位图文件中，其中每一位（bit）代表卷中的一簇，标识该簇是空闲的还是已被分配了的，由于该文件可以很容易的被扩大，所以NTFS的卷可以很方便的动态的扩大，而FAT格式的文件系统由于涉及到FAT表的变化，所以不能随意的对分区大小进行调整。 </p>
<p>第8个记录是引导文件（＄Boot），它是另一个重要的系统文件，存放着Windows 2000/XP的引导程序代码。该文件必须位于特定的磁盘位置才能够正确地引导系统。该文件是在Format程序运行时创建的，这正体现了NTFS把磁盘上的所有事物都看成是文件的原则。这也意味着虽然该文件享受NTFS系统的各种安全保护，但还是可以通过普通的文件I/O操作来修改。 </p>
<p>第9个记录是坏簇文件（＄BadClus），它记录了磁盘上该卷中所有的损坏的簇号，防止系统对其进行分配使用。 </p>
<p>第10个记录是安全文件（＄Secure），它存储了整个卷的安全描述符数据库。NTFS文件和目录都有各自的安全描述符，为了节省空间，NTFS将具有相同描述符的文件和目录存放在一个公共文件中。 </p>
<p>第11个记录为大写文件（＄UpCase，upper case file），该文件包含一个大小写字符转换表。 </p>
<p>第12个记录是扩展元数据目录（＄Extended metadata directory）。 </p>
<p>第13个记录是重解析点文件（$Extend\$Reparse）。 </p>
<p>第14个记录是变更日志文件（$Extend\$UsnJrnl）。</p>
<p>第15个记录是配额管理文件（$Extend\$Quota）。 </p>
<p>第16个记录是对象ID文件（$Extend\$ObjId）。 </p>
<p>第17～23记录是是系统保留记录，用于将来扩展。 </p>
<p>MFT的前16个元数据文件是如此重要，为了防止数据的丢失，NTFS系统在该卷文件存储部分的正中央对它们进行了备份。</p>
<p>NTFS把磁盘分成了两大部分，其中大约12%分配给了MFT，以满足其不断增长的文件数量。为了保持MFT元文件的连续性，MFT对这12%的空间享有独占权。余下的88%的空间被分配用来存储文件。而剩余磁盘空间则包含了所有的物理剩余空间–MFT剩余空间也包含在里面。MFT空间的使用机制可以这样来描述：当文件耗尽了存储空间时，Windows操作系统会简单地减少MFT空间，并把它分配给文件存储。当有剩余空间时，这些空间又会重新被划分给MFT。虽然系统尽力保持MFT空间的专用性，但是有时不得不做出牺牲。尽管MFT碎片有时是无法忍受的，却无法阻止它的发生。 </p>
<p>那么NTFS到底是怎么通过MFT来访问卷的呢？首先，当NTFS访问某个卷时，它必须”装载”该卷：NTFS会查看引导文件（在图中的＄Boot元数据文件定义的文件），找到MFT的物理磁盘地址。然后它就从文件记录的数据属性中获得VCN到LCN的映射信息，并存储在内存中。这个映射信息定位了MFT的运行（run或extent）在磁盘上的位置。接着，NTFS再打开几个元数据文件的MFT记录，并打开这些文件。如有必要NTFS开始执行它的文件系统恢复操作。在NTFS打开了剩余的元数据文件后，用户就可以开始访问该卷了。</p>
<h1 id="文件和目录记录"><a href="#文件和目录记录" class="headerlink" title="文件和目录记录"></a>文件和目录记录</h1><p>NTFS将文件作为属性/属性值的集合来处理，这一点与其他文件系统不一样。文件数据就是未命名属性的值，其他文件属性包括文件名、文件拥有者、文件时间标记等。</p>
<p>每个属性由单个的流（stream）组成，即简单的字符队列。严格地说，NTFS并不对文件进行操作，而只是对属性流进行读写。NTFS提供对属性流的各种操作：创建、删除、读取（字节范围）以及写入（字节范围）。读写操作一般是针对文件的未命名属性的，对于已命名的属性则可以通过已命名的数据流句法来进行操作。</p>
<p>一个文件通常占用一个文件记录。然而，当一个文件具有很多项属性值或很零碎的时候，就可能需要占用一个以上的文件记录。这种情况下，第一个文件记录是其基本的文件记录，存储有该文件需要的其它文件记录的位置。<strong>小文件和文件夹（典型的如1500字节或更少）将全部存储在文件的MFT记录里</strong>。 <strong>文件夹记录</strong>包括索引信息，小文件夹记录完全存储在MFT结构内，然而大的文件夹则被组织成B+树结构，用一个指针指向一个外部簇，该簇用来存储那些MFT内存储不了的文件夹的属性。 </p>
<p><strong>NTFS卷上文件的常用属性</strong>列出如下（并不是所有文件都有所有这些属性）：</p>
<p>（1）常驻属性与非常驻属性</p>
<p>当一个文件很小时，其所有属性和属性值可存放在MFT的文件记录中。当属性值能直接存放在MFT中时，该属性就称为常驻属性（resident attribute）。有些属性总是常驻的，这样NTFS才可以确定其他非常驻属性。例如，标准信息属性和根索引就总是常驻属性。</p>
<p>每个属性都是以一个标准头开始的，在头中包含该属性的信息和NTFS通常用来管理属性的信息。该头总是常驻的，并记录着属性值是否常驻、对于常驻属性，头中还包含着属性值的偏侈量和属性值的长度。</p>
<p>如果属性值能直接存放在MFT中，那么NTFS对它的访问时间就将大大缩短。NTFS只需访问磁盘一次，就可立即获得数据；而不必像FAT文件系统那样，先在FAT表中查找文件，再读出连续分配的单元，最后找到文件的数据。<br>小文件或小目录的所有属性，均可以在MFT中常驻。小文件的未命名属性可以包括所有文件数据。</p>
<p>大文件或大目录的所有属性，就不可能都常驻在MFT中。如果一个属性（如文件数据属性）太大而不能存放在只有1KB的MFT文件记录中，那么NTFS将从MFT之外分配区域。这些区域通常称为一个运行（run）或一个盘区（extent），它们可用来存储属性值，如文件数据。如果以后属性值又增加，那么NTFS将会再分配一个运行，以便用来存储额外的数据。值存储在运行中而不是在MFT文件记录中的属性称为非常驻属性（nonresident attribute）。NTFS决定了一个属性是常驻还是非常驻的；而属性值的位置对访问它的进程而言是透明的。当一个属性为非常驻时，如大文件的数据，它的头部包含了NTFS需要在磁盘上定位该属性值的有关信息。 </p>
<p>在标准属性中，只有可以增长的属性才是非常驻的。对文件来说，可增长的属性有数据、属性列表等。标准信息和文件名属性总是常驻的。 </p>
<p>（2）MFT文件记录结构分析  </p>
<p>主文件表MFT的文件记录由记录头和属性列表组成，由”FF FF FF FF”结束，一般大小为1K，或一个簇大小（这样一般就更大），记录头包括以下一些域： </p>
<p><img src="/images/NTFS-file-system/1.png" alt="1"></p>
<p>每次记录被修改都将导致日志文件序列号$LogFile Sequence Number（LSN）发生变化。<br>序列号Sequence Number（SN）用于记录主文件表记录被重复使用的次数。<br>硬连接数Hard Link Count记录硬连接的数目，只出现在基本文件记录中。<br>文件记录的实际长度是文件记录在磁盘上实际占用的字节空间。<br>基本文件记录中的文件索引号，对于基本文件记录，其值为0，如果不为0，则是一个主文件表的文件索引号，指向所属的基本文件记录中的文件记录号，在基本文件记录中包含有扩展文件记录的信息，存储在”属性列表ATTRIBUTE_LIST”属性中。<br>属性列表是可变长度区，以”FF FF FF FF”结束，对于1K长度的MFT记录，属性列表的起始偏移为0x30。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;【转】Windows文件系统FAT16、FAT32、NTFS的简单介绍。&lt;br&gt;
    
    </summary>
    
      <category term="文件系统" scheme="http://yoursite.com/categories/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="NTFS" scheme="http://yoursite.com/tags/NTFS/"/>
    
  </entry>
  
  <entry>
    <title>慕课网七夕动画学习总结+github pages展示</title>
    <link href="http://yoursite.com/2017/09/29/demo-qixi/"/>
    <id>http://yoursite.com/2017/09/29/demo-qixi/</id>
    <published>2017-09-29T12:31:33.000Z</published>
    <updated>2017-09-30T07:26:16.812Z</updated>
    
    <content type="html"><![CDATA[<p>这段时间照着慕课网上的一个动画案例-<a href="http://www.imooc.com/learn/453" target="_blank" rel="external">H5+JS+CSS3实现七夕言情</a>学习，<br><a id="more"></a><br>并将学习的各部分的代码进行整合，最后将代码托管到github上，并通过github pages展示这个动画demo。一些地方自己修改以后没有老师的效果好，但这是自己第一个敲出来的前端小demo，成就感满满，哈哈。。。</p>
<h1 id="关于动画案例"><a href="#关于动画案例" class="headerlink" title="关于动画案例"></a>关于动画案例</h1><p>里面用到一些jQuery和ajax相关的知识，由于自己学习js不久，很多深一点的概念理解不到位，比如一开始代码的封装和流程的编写，都是照葫芦画瓢，不是很理解，但是慢慢的看得多了，这个过程也就熟悉起来了。</p>
<p>页面布局部分比较容易理解，但是三个主题页面滚动起来最开始对自己还是有点难度。该案例很多部分都利用了CSS3的transform属性和animation属性。而且这个案例的思想是，把实现特定动作或者动能的代码封装起来，暴露一个接口出来，增强了安全性简化了编程过程。</p>
<p>具体的学习过程和用到的知识点，大家可以跟着<a href="http://www.imooc.com/learn/453" target="_blank" rel="external">H5+JS+CSS3实现七夕言情</a>学习，边看边学的效果比抱着书一直看的效果要好一些。但js高级教程的基础必须打牢，很多师兄师姐给的建议，也是网上一些大佬的建议。</p>
<p>关于画面自己做的一点小改动，button的样式做了修改，并增加了链接到github仓库的logo（shirly与猫）,嘤嘤嘤。如下，左下角和右下角辣么一点点。</p>
<p><img src="/images/demo-qixi/1.png" alt="1"></p>
<h1 id="关于将页面搭建在github-pages上"><a href="#关于将页面搭建在github-pages上" class="headerlink" title="关于将页面搭建在github pages上"></a>关于将页面搭建在github pages上</h1><p>关于动画制作的学习过程如果说困难和迷惑的话，那这最后一步展示在github pages上的过程，就应该是差点死在最后的1%上。在网上看了很多博客和教程，总会遇到很多小问题，无法显示自己在本地的效果。最后看到了这篇博客，<a href="http://www.cnblogs.com/lijiayi/p/githubpages.html" target="_blank" rel="external">【 js 工具 】如何在Github Pages搭建自己写的页面？</a>，这篇博客对于利用github pages搭建自己写的网页描述很详细，从在github上建仓库，到github pages的设置，再到利用git命令克隆github上的仓库到本地，最后push到远程master分支上。</p>
<p>更多关于github的使用可参考<a href="http://www.runoob.com/w3cnote/git-guide.html" target="_blank" rel="external">Github 简明教程</a>,其中讲解的git维护的本地仓库的工作流很清晰，对于我这个初步使用git的菜鸟十分友好。而且关于branch和更新与合并功能也讲的比较清楚。</p>
<p>本地仓库由git维护的“三棵树”组成。第一个是工作目录，使用<code>$ git status</code>可以查看，列出了当前目录下所有还未被git管理的文件，以及被git管理了且被修改过但还未添加（add）的文件，也即所有改动文件，用红色字体标出。如下所示，当我在本地仓库demo-qixi用<code>$ git status</code>命令查看后，可以看到红色文件均为未提交的。</p>
<p><img src="/images/demo-qixi/2.png" alt="2"></p>
<p>第二个是暂存区（Index），它类似一个缓存区，临时保存你的改动。通过<code>$ git add .</code>命令添加当前目录下的所有文件和子目录到暂存区。注意<code>.</code>表示当前目录下的所有文件和子目录。也可以指定文件添加到暂存区，使用<code>$ git add &lt;filename&gt;</code>。如下使用<code>$ git add .</code>添加文件到暂存区：</p>
<p><img src="/images/demo-qixi/3.png" alt="3"></p>
<p>此时我们再使用<code>$ git status</code>命令查看下工作目录，你会发现所有的文件都变绿了，这就表示这些文件已被添加到暂存区准备好被提交（commit）了。</p>
<p><img src="/images/demo-qixi/4.png" alt="4"></p>
<p>第三个是HEAD，它指向你最后一次提交的结果。使用<code>$ git commit -m &quot;代码提交说明信息&quot;</code>命令，将暂存区最后一次添加更改情况提交到HEAD。如下所示。</p>
<p><img src="/images/demo-qixi/5.png" alt="5"></p>
<p>上述“三棵树”的工作流程如下所示。</p>
<p><img src="/images/demo-qixi/6.png" alt="6"></p>
<p>此时改动虽然已经提交到了HEAD，但是还没到远端仓库。使用<code>$ git push</code>命令将这些改动提交到远端仓库的default master分支。也可以使用<code>$ git push origin master</code>命令，把改动提交到master分支。可以把master换成自己想要推送的任何分支。</p>
<h1 id="动画demo展示"><a href="#动画demo展示" class="headerlink" title="动画demo展示"></a>动画demo展示</h1><p>demo网页展示链接<a href="https://shirley5li.github.io/demo-qixi/index.html" target="_blank" rel="external">慕课七夕主题网页展示</a>。</p>
<p>该动画demo在github上的代码仓库<a href="https://github.com/shirley5li/demo-qixi" target="_blank" rel="external">demo-qixi</a>。</p>
<p>tips:在打开demo页面展示链接时，浏览器链接窗口出现提示“此页面上部分内容不安全，例如图像”，并且网页内容不能完整显示，我使用的firefox浏览器。如下所示，</p>
<p><img src="/images/demo-qixi/7.png" alt="7"></p>
<p>原因是我们用来展示demo的github pages站点是使用https协议的安全站点，而demo中的一些图片链接是使用的http协议，浏览器不会渲染混合内容（即来自安全站点的不安全数据）。如果我们浏览https网页，浏览器会拒绝加载不安全的内容（例如这里的demo-qixi中图片使用的http协议），浏览器将向用户发出“此页面上部分内容不安全”的警告。可以参考这篇讲web安全的文章，<a href="https://paper.seebug.org/112/" target="_blank" rel="external">绕过混合内容警告 - 在安全的页面加载不安全的内容</a>。</p>
<p>解决办法：我用的火狐浏览器，点浏览器链接窗口左侧的黄色警告三角形-&gt;点右侧箭头显示连接细节-&gt;点暂时解除保护，就可以看到完整的动画demo了。</p>
<p>然后点击 Go!开始动画啦。。。。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这段时间照着慕课网上的一个动画案例-&lt;a href=&quot;http://www.imooc.com/learn/453&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;H5+JS+CSS3实现七夕言情&lt;/a&gt;学习，&lt;br&gt;
    
    </summary>
    
      <category term="github" scheme="http://yoursite.com/categories/github/"/>
    
    
      <category term="animation" scheme="http://yoursite.com/tags/animation/"/>
    
      <category term="github pages" scheme="http://yoursite.com/tags/github-pages/"/>
    
  </entry>
  
  <entry>
    <title>匆匆拉萨之行</title>
    <link href="http://yoursite.com/2017/09/13/tour-lahsa/"/>
    <id>http://yoursite.com/2017/09/13/tour-lahsa/</id>
    <published>2017-09-13T12:34:02.000Z</published>
    <updated>2017-09-14T14:01:26.245Z</updated>
    
    <content type="html"><![CDATA[<p>第一次尝试写游记，嗯，是在周老师的文艺熏陶之下，试着记录一哈，但愿最后读起来不是一篇作文的感觉 T T ~~真的太久没动手写点儿文字了，想当年语文也是考过140分的人呐 = = 哈哈哈哈哈哈哈哈哈<br><a id="more"></a></p>
<p>嗯，这一定会是一本气质爆炸的流水账，如此鼓励自己，就像拉萨的阳光和色彩，希望经得起时间，淡化模糊了的时候再来强化一遍，反正又不是背英语词汇书，不用每次拾起都abandon 哈哈哈</p>
<p>在被林子放鸽子（为了她的大好前程，以及许诺将来可以赚很多钱养我的情况下，对于她的这种抛弃我的行为予以了包容，哈哈哈，我就是这么体贴大方聪明美丽可爱。。。。。。然而，在她晓得我自己去耍，她却在加班以后，果断从内疚的心态转为了说我抛弃了她==），又不想回家监督老弟学习，团队的小伙伴接连回家只剩我自己的情况下，突然萌生了想去远一点的地方这个想法，其实之前也有想过去趟拉萨，但是纠结于各种原因，一直没有付出行动。</p>
<p>从打算去拉萨，到最后决定并买票只花了一天时间，这是第一次去一个远一点的地方没有攻略过就这么仓促决定了。去的火车票没有，只好买机票，回程的也没有直达的火车票了，机票略贵不舍，只好坐着火车出拉萨到西宁再转车，真是一次相当难忘的硬座经历。虽然匆匆忙忙腿脚肿胀，但遇到些有趣的人始终是种新鲜。</p>
<h1 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h1><p><img src="/images/tour_lahsa/1.JPG" alt="1"></p>
<p>贡嘎机场外连绵的山，云彩触手可及的感觉，很凉爽，不过光秃秃的山还是有点荒凉，阳光很炫</p>
<p><img src="/images/tour_lahsa/2.JPG" alt="2"></p>
<p>停放机场大巴的车站，一出门就被这片云吸引到了，坐在旁边的叔叔说拉萨比这漂亮的云很多，这个太一般了，他们已经习惯了这片土地的蓝天和云，而我这个刚刚落地的游客真的十分激动哇，嘤嘤嘤，超爱高原上的感觉，怎么形容呢，就是会心情变得超级好，好心情养成地啊</p>
<p>来之前准备了红景天，由于时间仓促只提前喝了一天，然而下飞机之后感觉自己一点高原反应都没有，默默地瞎激动，以为自己会是逃脱高反的那个例外，就像当初觉得自己也是那个会逃过警告的人，but，瞎激动的幸运之后高反是说来就来的，晚上头疼的睡不着。</p>
<h1 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h1><p>红景天真特么不管用，第二天头疼头晕还是躺了大半天，还不如连喝几壶热水管用，必须要赞一下的是，本来带的防感冒的药吃了一片居然有治头疼的奇效，在感冒药的助攻下，晕晕乎乎吃了一顿串串。夏天拉萨夜晚的街头很是凉快，于是决定去布宫广场转转。夜晚吃饱了坐在电瓶车上吹着凉风浪荡在一座陌生城市的感觉，贼爽。</p>
<p><img src="/images/tour_lahsa/3.JPG" alt="3"></p>
<p>傍晚酒店对面的拉萨河，高山和低垂的白云环抱一整座城市。</p>
<p><img src="/images/tour_lahsa/4.JPG" alt="4"></p>
<p>布宫广场上一对拍婚纱照的恋人。想起回程的火车上遇到的一个妹子，她说起登珠峰途中遇到的一对六十多岁的爷爷奶奶，爷爷说，只有去过珠峰的爱情才是真的爱情。这种高调的秀恩爱的方式，真的很动人。在高海拔缺氧的环境下，我与你一起经历头晕和窒息，一起经受岁月无情的摧残。</p>
<h1 id="Day-3"><a href="#Day-3" class="headerlink" title="Day 3"></a>Day 3</h1><p><img src="/images/tour_lahsa/5.JPG" alt="5"></p>
<p>从这顿早饭开始体验到拉萨的物价之高，这样的包子在我高反胃口不好的情况下，吃了六个还不饱，一块五一个。原来我也可以是一个早饭能吃十几块钱包子的人= =</p>
<p><img src="/images/tour_lahsa/6.JPG" alt="6"></p>
<p>去的时候正好赶上拉萨的雪顿节，雪顿节又叫酸奶节，他们告诉我说是专门喝酸奶的节日，我觉得是在糊弄我，但我对西藏节日文化也没甚了解，不甚感兴趣，也没去深究。但雪顿节的林卡气氛我是感受到了，比我们春节似乎还要热闹。整个就是全家集体公园春游的感觉。</p>
<p><img src="/images/tour_lahsa/7.JPG" alt="7"></p>
<p>罗布林卡草地上到处都是来过林卡的藏民，一家人围坐在坐席上，带上酸奶，带上酥油茶，带上不远赶来的美好愿景。</p>
<p><img src="/images/tour_lahsa/8.JPG" alt="8"></p>
<p>喜欢拉萨的色彩，尤其这种对比强烈的红色和黄色，蓝天，白云，一切都很美丽。</p>
<h1 id="Day-4"><a href="#Day-4" class="headerlink" title="Day 4"></a>Day 4</h1><p><img src="/images/tour_lahsa/9.JPG" alt="9"></p>
<p>波林卡路措姆凉粉店的菜单，排队的人超级多。字很秀气。</p>
<p><img src="/images/tour_lahsa/10.JPG" alt="10"></p>
<p>点了酸奶，土豆，凉粉。酸奶超级喜欢，加了一勺白砂糖，还有点酸。</p>
<p><img src="/images/tour_lahsa/11.JPG" alt="11"></p>
<p>布宫的一角，就像童话里的一座宫殿。能想象到历史上权利曾在此集中过。宫殿上方的阳光，明亮刺眼，你只能仰视它，它离你那么近那么远。</p>
<p><img src="/images/tour_lahsa/12.JPG" alt="12"></p>
<p>龙王潭公园的树荫下看到的布宫背面。布宫真的是360度无死角的美丽。不知道为什么，就是感觉阳光映照下，这片绿很可口的样子，看起来真的很好吃的样子啊。</p>
<p><img src="/images/tour_lahsa/13.JPG" alt="13"></p>
<p>阳光穿过树隙。这株柳树目测应该几百年历史了，在高原长这么粗壮，它一定经历和见证了很多。</p>
<h1 id="Day-5"><a href="#Day-5" class="headerlink" title="Day 5"></a>Day 5</h1><p>布宫的门票真的太抢手，200块的门票听说被黄牛炒到了一千多，在一番折腾排队下，终于被放进这个大宫殿。不过在参观过程中，除了游客对各种精致奢华的惊叹，还有那些朝拜者的认真和虔诚。可以看到一家人把坐在轮椅上的老人从山脚下一级级石阶往上抬，也可以看到七旬的两个老奶奶大概是姐妹吧，相互搀扶一起双手合十，一起磕长头，一起留着长长的辫子。不羡慕这虔诚的信仰，但羡慕这种跨越时间温暖的陪伴。不管你去哪儿，都和你一起。</p>
<p><img src="/images/tour_lahsa/14.JPG" alt="14"></p>
<p>布宫的一角，红色的墙壁里面是一种高原上的草。惊叹于古人的建筑智慧和手艺。</p>
<p><img src="/images/tour_lahsa/15.JPG" alt="15"></p>
<p>进入主要的宫殿参观文物前最后能拍照的地方。</p>
<p><img src="/images/tour_lahsa/16.JPG" alt="16"></p>
<p>同行的一个小妹妹，红墙的映衬下，宛若一只仙女。</p>
<p><img src="/images/tour_lahsa/17.JPG" alt="17"></p>
<p>出布宫后在山上俯瞰整个拉萨，布宫就是整个拉萨的观景台。</p>
<p><img src="/images/tour_lahsa/18.JPG" alt="18"></p>
<p>格桑花盛开的山坡，此时山顶上的布宫十分安静。</p>
<p><img src="/images/tour_lahsa/19.JPG" alt="19"></p>
<p>大昭寺门前磕长头的朝拜者。我是看客，无法理解信仰的力量，但激动于世界上还有这样一群人。</p>
<p><img src="/images/tour_lahsa/20.JPG" alt="20"></p>
<p>八廓街的一角，蓝天，云朵，建筑，一切都温柔和谐。</p>
<p><img src="/images/tour_lahsa/21.JPG" alt="21"></p>
<p>八廓街上一家叫南卡的冷饮店。名字很美丽。</p>
<p><img src="/images/tour_lahsa/22.JPG" alt="22"></p>
<p>一对环绕大昭寺磕长头的姐妹，她们还很小，但我好像看到了在布宫那一对磕头相扶的老奶奶。</p>
<p><img src="/images/tour_lahsa/23.JPG" alt="23"></p>
<p>阴影里的长椅上坐了一排在转经的老爷爷。朋友调侃道，我那么帅你不拍我，去拍老头子。但是，一排老爷爷排排坐真的很可爱啊。</p>
<h1 id="Day-6"><a href="#Day-6" class="headerlink" title="Day 6"></a>Day 6</h1><p>早晨七点就坐车去纳木错，七点的拉萨还有些黑，尽管穿了外套街头还是很冷。但天微微亮的时候，拉萨的街头十分美丽。</p>
<p><img src="/images/tour_lahsa/24.JPG" alt="24"></p>
<p>圣湖就是圣湖，远远的就被迷住了。蓝天，云彩，雪山，清水。天空就像是湖水的倒影。坐在湖边发呆，感觉都很美好。</p>
<p><img src="/images/tour_lahsa/25.JPG" alt="25"></p>
<p>阳光倾泻而下。此处该有个美丽的仙仙的背影= =</p>
<p><img src="/images/tour_lahsa/26.JPG" alt="26"></p>
<p>再来一张透明的湖水。</p>
<p><img src="/images/tour_lahsa/27.JPG" alt="27"></p>
<p>一个仙仙的小姐姐的背影，超美，嘤嘤嘤</p>
<p><img src="/images/tour_lahsa/28.JPG" alt="28"></p>
<p>湖边一个浅滩，云朵和人群的倒影。</p>
<p><img src="/images/tour_lahsa/29.JPG" alt="29"></p>
<p>海拔5190米，那拉根山口飘舞的经幡。途中总有那么一抹颜色吸引了你，总有那么一个人惊艳于你。</p>
<p><img src="/images/tour_lahsa/30.JPG" alt="30"></p>
<p>青藏线上的黄昏。安静，美丽。</p>
<p>The End</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一次尝试写游记，嗯，是在周老师的文艺熏陶之下，试着记录一哈，但愿最后读起来不是一篇作文的感觉 T T ~~真的太久没动手写点儿文字了，想当年语文也是考过140分的人呐 = = 哈哈哈哈哈哈哈哈哈&lt;br&gt;
    
    </summary>
    
      <category term="游记" scheme="http://yoursite.com/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
      <category term="tour" scheme="http://yoursite.com/tags/tour/"/>
    
      <category term="lahsa" scheme="http://yoursite.com/tags/lahsa/"/>
    
  </entry>
  
  <entry>
    <title>Next主题配置---打赏功能+文章结束标志</title>
    <link href="http://yoursite.com/2017/08/10/blog-donate/"/>
    <id>http://yoursite.com/2017/08/10/blog-donate/</id>
    <published>2017-08-10T12:44:56.000Z</published>
    <updated>2017-09-13T12:57:24.933Z</updated>
    
    <content type="html"><![CDATA[<p>这次介绍一下next主题下添加打赏功能，以及在每篇文章末尾统一添加“文章结束”标志 ~~~吼吼吼<br><a id="more"></a></p>
<h1 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h1><p>首先在主题配置文件即hexo/themes/next/_config.yml找到version字段，查看自己的next主题的版本，如下图所示，我用的next主题的版本为5.1.2</p>
<p><img src="/images/blog_donate/1.png" alt="1"></p>
<p>在网上查了一些添加打赏功能的方法，参照来做的时候，发现了一些问题，可能是由于next主题升级到version5后自身增加了些隐藏的新功能，所以在网上找到的别人的一些方法不太适用，下面的添加文章结束功能也是如此。因此自己尝试设置好后特来分享一哈~</p>
<p>在主题配置文件找到Reward字段部分，如下图所示，其中reward_comment字段设置你的打赏介绍，wechatpay和alipay分别为你保存微信以及支付宝收款二维码的路径，可以是本地路径，也可以是用图床生成的链接地址。我是把图片放在本地的，即将两个二维码图片放在了next/source/images文件夹下。</p>
<p><img src="/images/blog_donate/2.png" alt="2"></p>
<p>此时默认的打赏按钮如下，略丑。。。然后作了小小改动，把打赏按钮变好看一点点 ~~~</p>
<p><img src="/images/blog_donate/3.png" alt="3"></p>
<p>改动方法如下：在hexo\themes\next\layout_macro下找到reward.swig文件，这个文件是关于打赏功能样式设置的。用下面代码覆盖原文件中的代码即可。由于保存的自动生成的微信及支付宝二维码图片的大小不一，且原图略大，所以可以通过设置包裹两幅图片的div元素的宽度和高度（代码两处注解处）来限制图片的大小，使其更加美观。宽度和高度可以依据自己喜欢更改大小。当然也可以自己使用图片处理工具将</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;div style=&quot;padding: 10px 0; margin: 20px auto; width: 90%; text-align: center;&quot;&gt;</div><div class="line">  &lt;div&gt;&#123;&#123; theme.reward_comment &#125;&#125;&lt;/div&gt;</div><div class="line">  &lt;button id=&quot;rewardButton&quot; disable=&quot;enable&quot; style=&quot;width: 80px;line-height: 38px;text-align: center;font-weight: bold;color: #fff;border-radius: 5px;</div><div class="line">margin:0 20px 20px 0;position: relative;overflow: hidden;color: #8c96a0;text-shadow:1px 1px 1px #fff;border:1px solid #dce1e6;box-shadow: 0 1px 2px #fff inset,0 -1px 0 #a8abae inset;background: -webkit-linear-gradient(top,#f2f3f7,#e4e8ec);background: -moz-linear-gradient(top,#f2f3f7,#e4e8ec);background: linear-gradient(top,#f2f3f7,#e4e8ec);&quot; onclick=&quot;var qr = document.getElementById(&apos;QR&apos;); if (qr.style.display === &apos;none&apos;) &#123;qr.style.display=&apos;block&apos;;&#125; else &#123;qr.style.display=&apos;none&apos;&#125;&quot;&gt;</div><div class="line">    打赏</div><div class="line">  &lt;/button&gt;</div><div class="line">  &lt;div id=&quot;QR&quot; style=&quot;display: none;&quot;&gt;</div><div class="line"></div><div class="line">    &#123;% if theme.wechatpay %&#125;</div><div class="line">      &lt;div id=&quot;wechat&quot; style=&quot;display: inline-block;width:150px;height:150px&quot;&gt;</div><div class="line">        &lt;img id=&quot;wechat_qr&quot; src=&quot;&#123;&#123; theme.wechatpay &#125;&#125;&quot; alt=&quot;&#123;&#123; theme.author &#125;&#125; WeChat Pay&quot;/&gt;</div><div class="line">        &lt;p&gt;WeChat Pay&lt;/p&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">    &#123;% if theme.alipay %&#125;</div><div class="line">      &lt;div id=&quot;alipay&quot; style=&quot;display: inline-block;width:150px;height:150px&quot;&gt;</div><div class="line">        &lt;img id=&quot;alipay_qr&quot; src=&quot;&#123;&#123; theme.alipay &#125;&#125;&quot; alt=&quot;&#123;&#123; theme.author &#125;&#125; Alipay&quot;/&gt;</div><div class="line">        &lt;p&gt;Alipay&lt;/p&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">    &#123;% if theme.bitcoin %&#125;</div><div class="line">      &lt;div id=&quot;bitcoin&quot; style=&quot;display: inline-block&quot;&gt;</div><div class="line">        &lt;img id=&quot;bitcoin_qr&quot; src=&quot;&#123;&#123; theme.bitcoin &#125;&#125;&quot; alt=&quot;&#123;&#123; theme.author &#125;&#125; Bitcoin&quot;/&gt;</div><div class="line">        &lt;p&gt;Bitcoin&lt;/p&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>调整后的效果见下图，是不是稍微不那么丑了一点点呢，红红火火恍恍惚惚~~~~</p>
<p><img src="/images/blog_donate/4.png" alt="4"></p>
<h1 id="文章结束标志"><a href="#文章结束标志" class="headerlink" title="文章结束标志"></a>文章结束标志</h1><p>本以为这是一个非常简单的小功能，其实的确是一个很简单的功能，但由于参考的人家的做法可能不适于我使用的版本，导致这个小小的问题又折腾了好久T T</p>
<p>在hexo\themes\next\layout_macro文件夹下新建passage-end-tag.swig文件，并添加代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-smile-o&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125; &lt;/div&gt;</div></pre></td></tr></table></figure>
<p>其中的 <code>&lt;i class=&quot;fa fa-smile-o&quot;&gt;&lt;/i&gt;</code>为<a href="http://www.yeahzan.com/fa/facss.html" target="_blank" rel="external">FontAwesome图标</a>,可以在其中挑选自己喜欢的图标，我选了一个笑脸，嘻嘻(●’◡’●)</p>
<p>然后打开hexo\themes\next\layout_macro文件夹下的post.swig文件，在 <code>END POST BODY</code>这段注解后添加如下图框框中的代码：</p>
<p><img src="/images/blog_donate/5.png" alt="5"></p>
<p>具体代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.passage_end_tag.enabled and not is_index %&#125;</div><div class="line">   &lt;div&gt;</div><div class="line">      &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</div><div class="line">   &lt;/div&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<p>再然后，打开主题配置文件hexo/themes/next/_config.yml，在末尾添加如下代码：</p>
<pre><code># 文章末尾添加“本文结束”标记
passage_end_tag:
  enabled: true
</code></pre><p>效果如下图所示：</p>
<p><img src="/images/blog_donate/6.png" alt="6"></p>
<p>最后，运行下hexo g -d 看下部署到github后的效果吧！</p>
<p><strong>PS:</strong>比较坑的一点，我使用的markdownpad，使用Tab缩进打代码块时，在右侧预览区可以正常显示代码块文本，但是 <code>hexo s</code> 在本地浏览器预览后，代码块文本却没有正确完整的显示，有些html标签被解释掉了。好像是Tab缩进可以被markdownpad的解释器正确解释，但是hexo的解释器却没有将其正确解析。后面换了一种打代码块的方式，就可以在浏览器正确显示了，但在markdownpad的预览区却没得到正常显示。即在代码块的最前面和最后面单独一行使用三个反引号    ```。如下图所示。</p>
<p><img src="/images/blog_donate/7.png" alt="7"></p>
<p>效果显示如下：</p>
<p><img src="/images/blog_donate/8.png" alt="8"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次介绍一下next主题下添加打赏功能，以及在每篇文章末尾统一添加“文章结束”标志 ~~~吼吼吼&lt;br&gt;
    
    </summary>
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="next" scheme="http://yoursite.com/tags/next/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>基于hexo和github搭建个人博客概述</title>
    <link href="http://yoursite.com/2017/08/06/hello-world/"/>
    <id>http://yoursite.com/2017/08/06/hello-world/</id>
    <published>2017-08-05T16:00:00.000Z</published>
    <updated>2017-08-08T03:22:18.200Z</updated>
    
    <content type="html"><![CDATA[<p>前言：第一次写博客，小激动~~~分享总结下用hexo+github搭建个人博客的过程，以及过程中遇到的问题。（我用的win10 64位系统）<br><a id="more"></a></p>
<h1 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h1><ul>
<li>hexo </li>
</ul>
<p>根据<a href="https://hexo.io/" target="_blank" rel="external">hexo官网</a>的介绍，hexo是一个快速简洁且高效的博客框架。hexo利用markdown等渲染引擎解析文章，快速生成静态网页。</p>
<p>Hexo是基于node.js的, 在安装它之前需要用到npm安装工具, 这个工具是 node.js 安装包的工具, 所以需要先安装 node.js。</p>
<p>关于hexo搭建博客原理进一步了解-<a href="https://segmentfault.com/a/1190000008784436" target="_blank" rel="external">hexo原理浅析</a>。</p>
<ul>
<li>node.js </li>
</ul>
<p>node.js是运行在服务端的javascript，是一个允许开发人员使用javascript语言编写服务端代码的框架。</p>
<ul>
<li>npm </li>
</ul>
<p>npm是随同node.js一起安装的包管理工具，能解决node.js代码部署上的很多问题。<br>允许用户从npm服务器下载别人编写的第三方包到本地使用。 允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。<br>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</p>
<p>新版的node.js已经集成了npm，所以下载安装node.js也一并将npm安装好了。</p>
<ul>
<li>git </li>
</ul>
<p>git是一种非常流行的分布式版本控制系统，它和其他版本控制系统的主要差别在于git只关心文件数据的整体是否发生变化，而大多数版本其他系统只关心文件内容的具体差异。</p>
<p>我们利用git将hexo生成的静态博客页面，部署到github pages上。关于git的<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000" target="_blank" rel="external">更多了解</a>。</p>
<ul>
<li>github </li>
</ul>
<p>随着git迅速成为最流行的分布式版本控制系统，github网站上线了。github是一个基于git的代码托管平台，它为开源项目免费提供git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。</p>
<p>github pages 是github提供给用户用来展示个人或者项目主页的静态网页系统。每个用户都可以使用自己的github项目创建，上传静态页面的html文件，github会帮你自动更新你的页面。</p>
<h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><p>1.环境准备（node.js，git，github相关设置）  </p>
<p>2.hexo下载安装  </p>
<p>3.hexo相关配置 </p>
<p>4.hexo与github pages链接     </p>
<p>5.发布第一篇博文</p>
<p>6.hexo主题介绍及配置  </p>
<p>7.hexo第三方服务集成（disqus评论，百度分享，访客记录等）</p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="node-js下载安装"><a href="#node-js下载安装" class="headerlink" title="node.js下载安装"></a>node.js下载安装</h3><p><a href="http://nodejs.cn/download/" target="_blank" rel="external">node.js下载</a></p>
<p>下载完成后一路默认next即可。利用win+R打开命令窗口，在命令窗口中输入以下命令，可以查看node和npm的版本信息。如果可以正确显示版本信息，说明安装正确，否则检查安装过程，重新安装。</p>
<pre><code>node -v
npm -v
</code></pre><p>结果如下图所示。</p>
<p><img src="/images/b1.png" alt="node版本检查"></p>
<h3 id="git下载安装"><a href="#git下载安装" class="headerlink" title="git下载安装"></a>git下载安装</h3><p><a href="https://git-scm.com/downloads" target="_blank" rel="external">git下载</a></p>
<p>下载完成后一路默认next即可。在命令窗口中输入以下命令，可以查看git的版本信息。</p>
<pre><code>git --version
</code></pre><p>结果如下图所示。</p>
<p><img src="/images/b2.png" alt="git版本检查"></p>
<h3 id="github注册相关"><a href="#github注册相关" class="headerlink" title="github注册相关"></a>github注册相关</h3><p>若没有注册过github账号，在<a href="https://github.com/" target="_blank" rel="external">github官网</a>按照步骤注册成功就好。</p>
<p>注册登录后，在页面右上角+号选择New repository创建新的代码仓库。</p>
<p><img src="/images/b3.png" alt="新建仓库"></p>
<p>在Create a new repository页面下，填写Repository name框框，框框中填写yourname.github.io，其中yourname为Owner框框中的那个名字。再勾选一下Initialize this repository with a README 。</p>
<p><img src="/images/b4.png" alt="新建仓库"></p>
<p>正确创建代码仓库后，需要开启github pages功能。在刚刚新建的代码仓库界面点击Settings，就会打开这个库的设置页面，向下拖动，会看见GitHub Pages，点击Launch Automatic page generator，github 自动创建出一个github pages页面。然后你可以试着访问yourname.github.io这个网址。</p>
<h2 id="hexo下载安装"><a href="#hexo下载安装" class="headerlink" title="hexo下载安装"></a>hexo下载安装</h2><p>在合适的盘，例如以E盘为例，在E盘根目录下新建hexo文件夹，然后右键点击选中hexo,选择Git Bash Here,在git命令窗口中输入以下命令：</p>
<pre><code>$ npm install hexo-cli -g
</code></pre><p>然后输入</p>
<pre><code>$ npm install hexo --save
</code></pre><p>建议将hexo以下插件一起安装了</p>
<pre><code>$ npm install hexo-generator-index --save #索引生成器
$ npm install hexo-generator-archive --save #归档生成器 
$ npm install hexo-generator-category --save #分类生成器
$ npm install hexo-generator-tag --save #标签生成器 
$ npm install hexo-server --save #本地服务 
$ npm install hexo-deployer-git --save #hexo通过git发布（必装） 
$ npm install hexo-renderer-marked@0.2.7--save #渲染器 
$ npm install hexo-renderer-stylus@0.3.0 --save #渲染器
</code></pre><p>(或者可以执行 npm install命令，npm会自动安装部分组件，但自己试了下，用npm命令不能安装全组件，部分组件还需自己手动安装，比如最重要的用于部署功能的组件 hexo-deployer-git 用 npm install命令就没装上。可以在hexo/node_modules文件下查看已经安装了的组件。)</p>
<p>安装完成后可查看下所安装的hexo版本信息。在hexo文件夹下右键进入git bash,输入以下命令:</p>
<pre><code>$ hexo -v
</code></pre><p>若看到类似如图所示版本信息说明hexo安装成功。</p>
<p><img src="/images/b5.png" alt="hexo版本信息"></p>
<h2 id="hexo相关配置"><a href="#hexo相关配置" class="headerlink" title="hexo相关配置"></a>hexo相关配置</h2><ul>
<li>hexo初始化 -&gt;在hexo文件夹下右键进入git bash,输入以下初始化命令： <code>$ hexo init</code></li>
<li>hexo生成 -&gt;输入以下命令生成静态页面: <code>$ hexo g</code></li>
<li>本地服务 -&gt;输入以下命令建立本地hexo预览： <code>$ hexo s</code><br>(确保已经安装了hexo-server组件，否则该命令无效）</li>
</ul>
<p>执行完 hexo s 命令后会提示</p>
<pre><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.
</code></pre><p>在浏览器中打开上述链接地址，会看到hexo默认的主题页面，至此hexo本地配置完成。</p>
<p>PS：注意！！！安装了福昕阅读器的朋友，福昕阅读器会占用4000端口，导致 hexo s 命令后出错提示4000端口被占用。你可以在hexo/_config.yml站点配置文件里修改端口号，换成自己想设置的端口即可，如下修改：</p>
<pre><code>server:
  port: 4001
  compress: true
  header: true
</code></pre><h2 id="hexo与github-pages链接"><a href="#hexo与github-pages链接" class="headerlink" title="hexo与github pages链接"></a>hexo与github pages链接</h2><ul>
<li><p>deployment配置  -&gt;在hexo/_config.yml站点配置文件里，修改下面的字段内容如下：</p>
<pre><code>deploy:     
  type: git 
  repo: https://github.com/yourname/yourname.github.com.git #yourname即为创建仓库时的那个yourname    
  branch: master
</code></pre><p>PS:注意.yml格式文件冒号后面有一个空格。</p>
</li>
</ul>
<h2 id="发布第一篇博文"><a href="#发布第一篇博文" class="headerlink" title="发布第一篇博文"></a>发布第一篇博文</h2><p>在hexo文件夹下右键进入git bash,输入以下命令即可生成一篇新文章：</p>
<pre><code>hexo new post &quot;post_title&quot;   #其中post_title为你想新建文章的文件名
</code></pre><p>此时在 E:\hexo\source\ _posts 下生成一个 post_title.md 文件（此后你可以用markdown编辑器打开该.md文件就可以编辑文章了）。</p>
<p>然后运行下面两条命令即可将新建的文章生成-&gt;部署到github上。</p>
<pre><code>hexo g  #生成
hexo d  #部署
</code></pre><p>部署完毕后，即可访问<a href="https://yourname.github.io看到刚刚生成部署到github的文章。" target="_blank" rel="external">https://yourname.github.io看到刚刚生成部署到github的文章。</a></p>
<p>PS：以后每次用markdown编辑器修改post_title.md文件后，记得用 <code>hexo g -d</code> 命令来生成和部署。修改完配置后也要<code>hexo g -d</code>一下。</p>
<p>PPS:hexo常用命令</p>
<pre><code>hexo new post &quot;postName&quot; #新建文章 
hexo new page &quot;pageName&quot; #新建页面 
hexo generate #生成静态页面至public目录 
hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）
hexo deploy #将.deploy目录部署到GitHub 
hexo help  #查看帮助 
hexo version #查看Hexo的版本
</code></pre><p>简写</p>
<pre><code>hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
</code></pre><h2 id="hexo主题介绍及配置"><a href="#hexo主题介绍及配置" class="headerlink" title="hexo主题介绍及配置"></a>hexo主题介绍及配置</h2><p>我选用的较为简洁大方的next主题。</p>
<ul>
<li><p>next主题下载 -&gt;在hexo文件夹下右键进入git bash,输入以下命令：</p>
<p>  <code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p>
</li>
<li><p>启用next主题 -&gt;在hexo/_config.yml站点配置文件下，修改如下字段：</p>
<p>   <code>theme: next</code></p>
</li>
<li>测试主题启用是否成功 -&gt;执行 <code>hexo s</code>命令，在浏览器访问 <a href="http://localhost:4000查看主题效果。" target="_blank" rel="external">http://localhost:4000查看主题效果。</a></li>
</ul>
<p>PS：主题的其他相关设置可以参考该博客，写的很详细<a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">手把手教你用Hexo+Github 搭建属于自己的博客</a>。</p>
<h2 id="hexo第三方服务集成"><a href="#hexo第三方服务集成" class="headerlink" title="hexo第三方服务集成"></a>hexo第三方服务集成</h2><h3 id="添加disqus评论"><a href="#添加disqus评论" class="headerlink" title="添加disqus评论"></a>添加disqus评论</h3><p>由于以前国内使用较多的多说评论下架了，所以选用了国外较为稳定的disqus，但使用该评论功能需要“科学上网”！</p>
<ul>
<li>注册disqus账号<a href="https://disqus.com" target="_blank" rel="external">https://disqus.com</a></li>
<li>在disqus设置页面中点 Add Disqus to your site 添加你的网站地址(即为<a href="https://yourname.github.io" target="_blank" rel="external">https://yourname.github.io</a>), 和设置Choose your unique Disqus URL, 你所填写的unique Disqus URL即为hexo配置文件中需要修改的short_name字段。</li>
<li><p>打开hexo/themes/next/_config.yml主题配置文件，修改下面字段：</p>
<pre><code>#Disqus
disqus:
  enable: true
  shortname:     #shortname即为你上面填写的唯一disqus路径，填上就好
  count: true
</code></pre></li>
</ul>
<h3 id="添加百度分享功能"><a href="#添加百度分享功能" class="headerlink" title="添加百度分享功能"></a>添加百度分享功能</h3><p>百度分享功能的添加可以参考下面这篇博客。<a href="http://blog.csdn.net/cl534854121/article/details/76121105" target="_blank" rel="external">Hexo+Github搭建个人博客(三)——百度分享集成</a></p>
<h3 id="百度统计访客访问量功能"><a href="#百度统计访客访问量功能" class="headerlink" title="百度统计访客访问量功能"></a>百度统计访客访问量功能</h3><p>其他酷炫小功能参考<a href="http://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="external">hexo的next主题个性化教程:打造炫酷网站</a>。</p>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">手把手教你用Hexo+Github 搭建属于自己的博客 </a></p>
<p><a href="http://www.jianshu.com/p/017e01718d41" target="_blank" rel="external">记录第一次搭建hexo</a></p>
<p>嘤嘤嘤<del>~</del>~~THE END!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言：第一次写博客，小激动~~~分享总结下用hexo+github搭建个人博客的过程，以及过程中遇到的问题。（我用的win10 64位系统）&lt;br&gt;
    
    </summary>
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
</feed>
