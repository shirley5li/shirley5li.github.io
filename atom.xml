<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shirley</title>
  <subtitle>一只自学成菜的仙女!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-11T04:32:52.815Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ShirleyLi</name>
    <email>1363814017@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Next主题配置---打赏功能+文章结束标志</title>
    <link href="http://yoursite.com/2017/08/10/blog-donate/"/>
    <id>http://yoursite.com/2017/08/10/blog-donate/</id>
    <published>2017-08-10T12:44:56.000Z</published>
    <updated>2017-08-11T04:32:52.815Z</updated>
    
    <content type="html"><![CDATA[<p>这次介绍一下next主题下添加打赏功能，以及在每篇文章末尾统一添加“文章结束”标志 ~~~<br><a id="more"></a></p>
<h1 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h1><p>首先在主题配置文件即hexo/themes/next/_config.yml找到version字段，查看自己的next主题的版本，如下图所示，我用的next主题的版本为5.1.2</p>
<p><img src="/images/blog_donate/1.png" alt="1"></p>
<p>在网上查了一些添加打赏功能的方法，参照来做的时候，发现了一些问题，可能是由于next主题升级到version5后自身增加了些隐藏的新功能，所以在网上找到的别人的一些方法不太适用，下面的添加文章结束功能也是如此。因此自己尝试设置好后特来分享一哈~</p>
<p>在主题配置文件找到Reward字段部分，如下图所示，其中reward_comment字段设置你的打赏介绍，wechatpay和alipay分别为你保存微信以及支付宝收款二维码的路径，可以是本地路径，也可以是用图床生成的链接地址。我是把图片放在本地的，即将两个二维码图片放在了next/source/images文件夹下。</p>
<p><img src="/images/blog_donate/2.png" alt="2"></p>
<p>此时默认的打赏按钮如下，略丑。。。然后作了小小改动，把打赏按钮变好看一点点 ~~~</p>
<p><img src="/images/blog_donate/3.png" alt="3"></p>
<p>改动方法如下：在hexo\themes\next\layout_macro下找到reward.swig文件，这个文件是关于打赏功能样式设置的。用下面代码覆盖原文件中的代码即可。由于保存的自动生成的微信及支付宝二维码图片的大小不一，且原图略大，所以可以通过设置包裹两幅图片的div元素的宽度和高度（代码两处注解处）来限制图片的大小，使其更加美观。宽度和高度可以依据自己喜欢更改大小。当然也可以自己使用图片处理工具将</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;div style=&quot;padding: 10px 0; margin: 20px auto; width: 90%; text-align: center;&quot;&gt;</div><div class="line">  &lt;div&gt;&#123;&#123; theme.reward_comment &#125;&#125;&lt;/div&gt;</div><div class="line">  &lt;button id=&quot;rewardButton&quot; disable=&quot;enable&quot; style=&quot;width: 80px;line-height: 38px;text-align: center;font-weight: bold;color: #fff;border-radius: 5px;</div><div class="line">margin:0 20px 20px 0;position: relative;overflow: hidden;color: #8c96a0;text-shadow:1px 1px 1px #fff;border:1px solid #dce1e6;box-shadow: 0 1px 2px #fff inset,0 -1px 0 #a8abae inset;background: -webkit-linear-gradient(top,#f2f3f7,#e4e8ec);background: -moz-linear-gradient(top,#f2f3f7,#e4e8ec);background: linear-gradient(top,#f2f3f7,#e4e8ec);&quot; onclick=&quot;var qr = document.getElementById(&apos;QR&apos;); if (qr.style.display === &apos;none&apos;) &#123;qr.style.display=&apos;block&apos;;&#125; else &#123;qr.style.display=&apos;none&apos;&#125;&quot;&gt;</div><div class="line">    打赏</div><div class="line">  &lt;/button&gt;</div><div class="line">  &lt;div id=&quot;QR&quot; style=&quot;display: none;&quot;&gt;</div><div class="line"></div><div class="line">    &#123;% if theme.wechatpay %&#125;</div><div class="line">      &lt;div id=&quot;wechat&quot; style=&quot;display: inline-block;width:150px;height:150px&quot;&gt;</div><div class="line">        &lt;img id=&quot;wechat_qr&quot; src=&quot;&#123;&#123; theme.wechatpay &#125;&#125;&quot; alt=&quot;&#123;&#123; theme.author &#125;&#125; WeChat Pay&quot;/&gt;</div><div class="line">        &lt;p&gt;WeChat Pay&lt;/p&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">    &#123;% if theme.alipay %&#125;</div><div class="line">      &lt;div id=&quot;alipay&quot; style=&quot;display: inline-block;width:150px;height:150px&quot;&gt;</div><div class="line">        &lt;img id=&quot;alipay_qr&quot; src=&quot;&#123;&#123; theme.alipay &#125;&#125;&quot; alt=&quot;&#123;&#123; theme.author &#125;&#125; Alipay&quot;/&gt;</div><div class="line">        &lt;p&gt;Alipay&lt;/p&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">    &#123;% if theme.bitcoin %&#125;</div><div class="line">      &lt;div id=&quot;bitcoin&quot; style=&quot;display: inline-block&quot;&gt;</div><div class="line">        &lt;img id=&quot;bitcoin_qr&quot; src=&quot;&#123;&#123; theme.bitcoin &#125;&#125;&quot; alt=&quot;&#123;&#123; theme.author &#125;&#125; Bitcoin&quot;/&gt;</div><div class="line">        &lt;p&gt;Bitcoin&lt;/p&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">  &lt;/div&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>调整后的效果见下图，是不是稍微不那么丑了一点点呢，红红火火恍恍惚惚~~~~</p>
<p><img src="/images/blog_donate/4.png" alt="4"></p>
<h1 id="文章结束标志"><a href="#文章结束标志" class="headerlink" title="文章结束标志"></a>文章结束标志</h1><p>本以为这是一个非常简单的小功能，其实的确是一个很简单的功能，但由于参考的人家的做法可能不适于我使用的版本，导致这个小小的问题又折腾了好久T T</p>
<p>在hexo\themes\next\layout_macro文件夹下新建passage-end-tag.swig文件，并添加代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-smile-o&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125; &lt;/div&gt;</div></pre></td></tr></table></figure>
<p>其中的 <code>&lt;i class=&quot;fa fa-smile-o&quot;&gt;&lt;/i&gt;</code>为<a href="http://www.yeahzan.com/fa/facss.html" target="_blank" rel="external">FontAwesome图标</a>,可以在其中挑选自己喜欢的图标，我选了一个笑脸，嘻嘻(●’◡’●)</p>
<p>然后打开hexo\themes\next\layout_macro文件夹下的post.swig文件，在 <code>END POST BODY</code>这段注解后添加如下图框框中的代码：</p>
<p><img src="/images/blog_donate/5.png" alt="5"></p>
<p>具体代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.passage_end_tag.enabled and not is_index %&#125;</div><div class="line">   &lt;div&gt;</div><div class="line">      &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</div><div class="line">   &lt;/div&gt;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<p>再然后，打开主题配置文件hexo/themes/next/_config.yml，在末尾添加如下代码：</p>
<pre><code># 文章末尾添加“本文结束”标记
passage_end_tag:
  enabled: true
</code></pre><p>效果如下图所示：</p>
<p><img src="/images/blog_donate/6.png" alt="6"></p>
<p>最后，运行下hexo g -d 看下部署到github后的效果吧！</p>
<p><strong>PS:</strong>比较坑的一点，我使用的markdownpad，使用Tab缩进打代码块时，在右侧预览区可以正常显示代码块文本，但是 <code>hexo s</code> 在本地浏览器预览后，代码块文本却没有正确完整的显示，有些html标签被解释掉了。好像是Tab缩进可以被markdownpad的解释器正确解释，但是hexo的解释器却没有将其正确解析。后面换了一种打代码块的方式，就可以在浏览器正确显示了，但在markdownpad的预览区却没得到正常显示。即在代码块的最前面和最后面单独一行使用三个反引号    ```。如下图所示。</p>
<p><img src="/images/blog_donate/7.png" alt="7"></p>
<p>效果显示如下：</p>
<p><img src="/images/blog_donate/8.png" alt="8"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次介绍一下next主题下添加打赏功能，以及在每篇文章末尾统一添加“文章结束”标志 ~~~&lt;br&gt;
    
    </summary>
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="next" scheme="http://yoursite.com/tags/next/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>基于hexo和github搭建个人博客概述</title>
    <link href="http://yoursite.com/2017/08/06/hello-world/"/>
    <id>http://yoursite.com/2017/08/06/hello-world/</id>
    <published>2017-08-05T16:00:00.000Z</published>
    <updated>2017-08-08T03:22:18.200Z</updated>
    
    <content type="html"><![CDATA[<p>前言：第一次写博客，小激动~~~分享总结下用hexo+github搭建个人博客的过程，以及过程中遇到的问题。（我用的win10 64位系统）<br><a id="more"></a></p>
<h1 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h1><ul>
<li>hexo </li>
</ul>
<p>根据<a href="https://hexo.io/" target="_blank" rel="external">hexo官网</a>的介绍，hexo是一个快速简洁且高效的博客框架。hexo利用markdown等渲染引擎解析文章，快速生成静态网页。</p>
<p>Hexo是基于node.js的, 在安装它之前需要用到npm安装工具, 这个工具是 node.js 安装包的工具, 所以需要先安装 node.js。</p>
<p>关于hexo搭建博客原理进一步了解-<a href="https://segmentfault.com/a/1190000008784436" target="_blank" rel="external">hexo原理浅析</a>。</p>
<ul>
<li>node.js </li>
</ul>
<p>node.js是运行在服务端的javascript，是一个允许开发人员使用javascript语言编写服务端代码的框架。</p>
<ul>
<li>npm </li>
</ul>
<p>npm是随同node.js一起安装的包管理工具，能解决node.js代码部署上的很多问题。<br>允许用户从npm服务器下载别人编写的第三方包到本地使用。 允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。<br>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</p>
<p>新版的node.js已经集成了npm，所以下载安装node.js也一并将npm安装好了。</p>
<ul>
<li>git </li>
</ul>
<p>git是一种非常流行的分布式版本控制系统，它和其他版本控制系统的主要差别在于git只关心文件数据的整体是否发生变化，而大多数版本其他系统只关心文件内容的具体差异。</p>
<p>我们利用git将hexo生成的静态博客页面，部署到github pages上。关于git的<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/001373962845513aefd77a99f4145f0a2c7a7ca057e7570000" target="_blank" rel="external">更多了解</a>。</p>
<ul>
<li>github </li>
</ul>
<p>随着git迅速成为最流行的分布式版本控制系统，github网站上线了。github是一个基于git的代码托管平台，它为开源项目免费提供git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。</p>
<p>github pages 是github提供给用户用来展示个人或者项目主页的静态网页系统。每个用户都可以使用自己的github项目创建，上传静态页面的html文件，github会帮你自动更新你的页面。</p>
<h1 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h1><p>1.环境准备（node.js，git，github相关设置）  </p>
<p>2.hexo下载安装  </p>
<p>3.hexo相关配置 </p>
<p>4.hexo与github pages链接     </p>
<p>5.发布第一篇博文</p>
<p>6.hexo主题介绍及配置  </p>
<p>7.hexo第三方服务集成（disqus评论，百度分享，访客记录等）</p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="node-js下载安装"><a href="#node-js下载安装" class="headerlink" title="node.js下载安装"></a>node.js下载安装</h3><p><a href="http://nodejs.cn/download/" target="_blank" rel="external">node.js下载</a></p>
<p>下载完成后一路默认next即可。利用win+R打开命令窗口，在命令窗口中输入以下命令，可以查看node和npm的版本信息。如果可以正确显示版本信息，说明安装正确，否则检查安装过程，重新安装。</p>
<pre><code>node -v
npm -v
</code></pre><p>结果如下图所示。</p>
<p><img src="/images/b1.png" alt="node版本检查"></p>
<h3 id="git下载安装"><a href="#git下载安装" class="headerlink" title="git下载安装"></a>git下载安装</h3><p><a href="https://git-scm.com/downloads" target="_blank" rel="external">git下载</a></p>
<p>下载完成后一路默认next即可。在命令窗口中输入以下命令，可以查看git的版本信息。</p>
<pre><code>git --version
</code></pre><p>结果如下图所示。</p>
<p><img src="/images/b2.png" alt="git版本检查"></p>
<h3 id="github注册相关"><a href="#github注册相关" class="headerlink" title="github注册相关"></a>github注册相关</h3><p>若没有注册过github账号，在<a href="https://github.com/" target="_blank" rel="external">github官网</a>按照步骤注册成功就好。</p>
<p>注册登录后，在页面右上角+号选择New repository创建新的代码仓库。</p>
<p><img src="/images/b3.png" alt="新建仓库"></p>
<p>在Create a new repository页面下，填写Repository name框框，框框中填写yourname.github.io，其中yourname为Owner框框中的那个名字。再勾选一下Initialize this repository with a README 。</p>
<p><img src="/images/b4.png" alt="新建仓库"></p>
<p>正确创建代码仓库后，需要开启github pages功能。在刚刚新建的代码仓库界面点击Settings，就会打开这个库的设置页面，向下拖动，会看见GitHub Pages，点击Launch Automatic page generator，github 自动创建出一个github pages页面。然后你可以试着访问yourname.github.io这个网址。</p>
<h2 id="hexo下载安装"><a href="#hexo下载安装" class="headerlink" title="hexo下载安装"></a>hexo下载安装</h2><p>在合适的盘，例如以E盘为例，在E盘根目录下新建hexo文件夹，然后右键点击选中hexo,选择Git Bash Here,在git命令窗口中输入以下命令：</p>
<pre><code>$ npm install hexo-cli -g
</code></pre><p>然后输入</p>
<pre><code>$ npm install hexo --save
</code></pre><p>建议将hexo以下插件一起安装了</p>
<pre><code>$ npm install hexo-generator-index --save #索引生成器
$ npm install hexo-generator-archive --save #归档生成器 
$ npm install hexo-generator-category --save #分类生成器
$ npm install hexo-generator-tag --save #标签生成器 
$ npm install hexo-server --save #本地服务 
$ npm install hexo-deployer-git --save #hexo通过git发布（必装） 
$ npm install hexo-renderer-marked@0.2.7--save #渲染器 
$ npm install hexo-renderer-stylus@0.3.0 --save #渲染器
</code></pre><p>(或者可以执行 npm install命令，npm会自动安装部分组件，但自己试了下，用npm命令不能安装全组件，部分组件还需自己手动安装，比如最重要的用于部署功能的组件 hexo-deployer-git 用 npm install命令就没装上。可以在hexo/node_modules文件下查看已经安装了的组件。)</p>
<p>安装完成后可查看下所安装的hexo版本信息。在hexo文件夹下右键进入git bash,输入以下命令:</p>
<pre><code>$ hexo -v
</code></pre><p>若看到类似如图所示版本信息说明hexo安装成功。</p>
<p><img src="/images/b5.png" alt="hexo版本信息"></p>
<h2 id="hexo相关配置"><a href="#hexo相关配置" class="headerlink" title="hexo相关配置"></a>hexo相关配置</h2><ul>
<li>hexo初始化 -&gt;在hexo文件夹下右键进入git bash,输入以下初始化命令： <code>$ hexo init</code></li>
<li>hexo生成 -&gt;输入以下命令生成静态页面: <code>$ hexo g</code></li>
<li>本地服务 -&gt;输入以下命令建立本地hexo预览： <code>$ hexo s</code><br>(确保已经安装了hexo-server组件，否则该命令无效）</li>
</ul>
<p>执行完 hexo s 命令后会提示</p>
<pre><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.
</code></pre><p>在浏览器中打开上述链接地址，会看到hexo默认的主题页面，至此hexo本地配置完成。</p>
<p>PS：注意！！！安装了福昕阅读器的朋友，福昕阅读器会占用4000端口，导致 hexo s 命令后出错提示4000端口被占用。你可以在hexo/_config.yml站点配置文件里修改端口号，换成自己想设置的端口即可，如下修改：</p>
<pre><code>server:
  port: 4001
  compress: true
  header: true
</code></pre><h2 id="hexo与github-pages链接"><a href="#hexo与github-pages链接" class="headerlink" title="hexo与github pages链接"></a>hexo与github pages链接</h2><ul>
<li><p>deployment配置  -&gt;在hexo/_config.yml站点配置文件里，修改下面的字段内容如下：</p>
<pre><code>deploy:     
  type: git 
  repo: https://github.com/yourname/yourname.github.com.git #yourname即为创建仓库时的那个yourname    
  branch: master
</code></pre><p>PS:注意.yml格式文件冒号后面有一个空格。</p>
</li>
</ul>
<h2 id="发布第一篇博文"><a href="#发布第一篇博文" class="headerlink" title="发布第一篇博文"></a>发布第一篇博文</h2><p>在hexo文件夹下右键进入git bash,输入以下命令即可生成一篇新文章：</p>
<pre><code>hexo new post &quot;post_title&quot;   #其中post_title为你想新建文章的文件名
</code></pre><p>此时在 E:\hexo\source\ _posts 下生成一个 post_title.md 文件（此后你可以用markdown编辑器打开该.md文件就可以编辑文章了）。</p>
<p>然后运行下面两条命令即可将新建的文章生成-&gt;部署到github上。</p>
<pre><code>hexo g  #生成
hexo d  #部署
</code></pre><p>部署完毕后，即可访问<a href="https://yourname.github.io看到刚刚生成部署到github的文章。" target="_blank" rel="external">https://yourname.github.io看到刚刚生成部署到github的文章。</a></p>
<p>PS：以后每次用markdown编辑器修改post_title.md文件后，记得用 <code>hexo g -d</code> 命令来生成和部署。修改完配置后也要<code>hexo g -d</code>一下。</p>
<p>PPS:hexo常用命令</p>
<pre><code>hexo new post &quot;postName&quot; #新建文章 
hexo new page &quot;pageName&quot; #新建页面 
hexo generate #生成静态页面至public目录 
hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）
hexo deploy #将.deploy目录部署到GitHub 
hexo help  #查看帮助 
hexo version #查看Hexo的版本
</code></pre><p>简写</p>
<pre><code>hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
</code></pre><h2 id="hexo主题介绍及配置"><a href="#hexo主题介绍及配置" class="headerlink" title="hexo主题介绍及配置"></a>hexo主题介绍及配置</h2><p>我选用的较为简洁大方的next主题。</p>
<ul>
<li><p>next主题下载 -&gt;在hexo文件夹下右键进入git bash,输入以下命令：</p>
<p>  <code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p>
</li>
<li><p>启用next主题 -&gt;在hexo/_config.yml站点配置文件下，修改如下字段：</p>
<p>   <code>theme: next</code></p>
</li>
<li>测试主题启用是否成功 -&gt;执行 <code>hexo s</code>命令，在浏览器访问 <a href="http://localhost:4000查看主题效果。" target="_blank" rel="external">http://localhost:4000查看主题效果。</a></li>
</ul>
<p>PS：主题的其他相关设置可以参考该博客，写的很详细<a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">手把手教你用Hexo+Github 搭建属于自己的博客</a>。</p>
<h2 id="hexo第三方服务集成"><a href="#hexo第三方服务集成" class="headerlink" title="hexo第三方服务集成"></a>hexo第三方服务集成</h2><h3 id="添加disqus评论"><a href="#添加disqus评论" class="headerlink" title="添加disqus评论"></a>添加disqus评论</h3><p>由于以前国内使用较多的多说评论下架了，所以选用了国外较为稳定的disqus，但使用该评论功能需要“科学上网”！</p>
<ul>
<li>注册disqus账号<a href="https://disqus.com" target="_blank" rel="external">https://disqus.com</a></li>
<li>在disqus设置页面中点 Add Disqus to your site 添加你的网站地址(即为<a href="https://yourname.github.io" target="_blank" rel="external">https://yourname.github.io</a>), 和设置Choose your unique Disqus URL, 你所填写的unique Disqus URL即为hexo配置文件中需要修改的short_name字段。</li>
<li><p>打开hexo/themes/next/_config.yml主题配置文件，修改下面字段：</p>
<pre><code>#Disqus
disqus:
  enable: true
  shortname:     #shortname即为你上面填写的唯一disqus路径，填上就好
  count: true
</code></pre></li>
</ul>
<h3 id="添加百度分享功能"><a href="#添加百度分享功能" class="headerlink" title="添加百度分享功能"></a>添加百度分享功能</h3><p>百度分享功能的添加可以参考下面这篇博客。<a href="http://blog.csdn.net/cl534854121/article/details/76121105" target="_blank" rel="external">Hexo+Github搭建个人博客(三)——百度分享集成</a></p>
<h3 id="百度统计访客访问量功能"><a href="#百度统计访客访问量功能" class="headerlink" title="百度统计访客访问量功能"></a>百度统计访客访问量功能</h3><p>其他酷炫小功能参考<a href="http://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="external">hexo的next主题个性化教程:打造炫酷网站</a>。</p>
<h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">手把手教你用Hexo+Github 搭建属于自己的博客 </a></p>
<p><a href="http://www.jianshu.com/p/017e01718d41" target="_blank" rel="external">记录第一次搭建hexo</a></p>
<p>嘤嘤嘤<del>~</del>~~THE END!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前言：第一次写博客，小激动~~~分享总结下用hexo+github搭建个人博客的过程，以及过程中遇到的问题。（我用的win10 64位系统）&lt;br&gt;
    
    </summary>
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
</feed>
